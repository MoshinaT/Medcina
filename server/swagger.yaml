openapi: 3.0.0
info:
  title: Node.js Sign-up and Verification API
  description: Node.js + MongoDB - API with email sign-up, verification, authentication and forgot password
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /accounts:
    post:
      summary: Register a new user account and send a verification email
        description: The first account registered in the system is assigned the `Admin` role, other accounts are assigned the `User` role.
        operationId: register
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "5eb12e197e06a76ccdefc121"
                  medicines:
                    type: string
                    example: "knkn"
                  address:
                    type: string
                    example: "oko"
                  phoneNumber:
                    type: string
                    example: "jjj"
                required:
                  - name
                  - phoneNumber
                  - address
                  - medicines
        responses:
          "200":
            description: The registration request was successful and a verification email has been sent to the specified email address
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Registration successful"
  /accounts/{val}:
    parameters:
      - in: path
        name: val
        description: Search val
        required: true
        example: "5eb12e197e06a76ccdefc121"
        schema:
          type: string
    get:
      summary: Get a single account by id
      description: Admin users can access any account, regular users are restricted to their own account.
      operationId: getAccountById
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Details of the specified account
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "5eb12e197e06a76ccdefc121"
                  medicines:
                    type: string
                    example: "knkn"
                  address:
                    type: string
                    example: "oko"
                  phoneNumber:
                    type: string
                    example: "jjj"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid, or the user does not have access to perform the action
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not Found"